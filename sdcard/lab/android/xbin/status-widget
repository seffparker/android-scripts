#!/data/bin/bash

# Generate plain HTML file from text file
# Author: Seff Parker
# Version: 1.1.1 20210622

source check-root
source set-prompt
source set-dir
source set-log

APP_NAME="Status Widget"
PID_FILE="$RUN/status-widget.pid"
BUCKET="$VAR/status-widget/bucket"
HTML_FILE="$VAR/status-widget/html/status-widget"
NGX_CONF="$ETC/nginx/status-widget.conf"

daemon_run () {
    tty -s && exec &> >(add-date)
    echo "Starting local NGINX server"
    nginx -c $NGX_CONF
    while true
        do
            echo "Updating widgets"
            HTML_CODE="<html><body>"
            HTML_CODE+=$(for ITEM in $(ls -t $BUCKET)
                do
                echo "<p>"
                cat $BUCKET/$ITEM
                echo "</p>"
            done)
            HTML_CODE+="</body></html>"
            echo $HTML_CODE > $HTML_FILE
            echo "Page generated on $(date)" >> $HTML_FILE
            sleep 5
            inotifywait -e open -e move -e modify -e delete $BUCKET ${HTML_FILE}
            # inotifywait -e move -e modify -e delete $BUCKET
            wait-for-display
    done
    echo done
}

daemon_start () {
    echo -n "Starting ${APP_NAME} "
    if daemon -t -p $PID_FILE -c $0
        then
        PID=$(cat $PID_FILE)
        echo "(PID: $PID) $(OK)"
    elif daemon -s -p $PID_FILE -c $0 -a run
        then
        PID=$(cat $PID_FILE)
        echo "(PID: $PID) $(DONE)"
    else
        FAIL
        CODE=1
    fi
}

daemon_status () {
    echo -n "${APP_NAME} is "
    if daemon -t -p $PID_FILE -c $0
        then
        PID=$(cat $PID_FILE)
        echo "running (PID: $PID) $(OK)"
    else
        echo "not running $(FAIL)"
        CODE=1
    fi
}

daemon_stop () {
    PID=$(cat $PID_FILE 2> /dev/null)
    echo -n "Stopping ${APP_NAME} "
    nginx -s stop -c $NGX_CONF
    rm -f $HTML
    if daemon -k -p $PID_FILE -c $0
        then
        rm -f $PID_FILE
        echo "(PID: $PID) $(DONE)"
    else
        OK
    fi
}

# main ()

case $1 in
    start)
        daemon_start
        ;;
    run)
        daemon_run
        ;;
    status)
        daemon_status
        ;;
    restart)
        daemon_stop
        daemon_start
        ;;
    stop)
        daemon_stop
        ;;
    *)
        echo "Usage: start | status | restart | stop"
        CODE=2
        ;;
esac

exit $CODE