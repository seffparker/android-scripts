#!/data/bin/bash

# Print file modification age in different units
# Author: Seff Parker
# Version: 0.0.1 20210703

QUIET_UNIT=false

UNIT_s="seconds"
UNIT_m="minutes"
UNIT_h="hours"
UNIT_d="days"
UNIT_M="months"
UNIT_y="years"

age_seconds () {
    AGE=${AGE_SEC}
}

age_minutes () {
    AGE=$((${AGE_SEC}/60))
}

age_hours () {
    AGE=$((${AGE_SEC}/3600))
}

age_days () {
    AGE=$((${AGE_SEC}/86400))
}

age_months () {
    AGE=$((${AGE_SEC}/2592000))
}

age_years () {
    AGE=$((${AGE_SEC}/31104000))
}

age_auto () {
    if [[ ${AGE_SEC} -lt 60 ]]
        then
        UNIT="seconds"
    elif [[ ${AGE_SEC} -lt 3600 ]]
        then
        UNIT="minutes"
    elif [[ ${AGE_SEC} -lt 86400 ]]
        then
        UNIT="hours"
    elif [[ ${AGE_SEC} -lt 2592000 ]]
        then
        UNIT="days"
    elif [[ ${AGE_SEC} -lt 31104000 ]]
        then
        UNIT="months"
    else
        UNIT="years"
    fi
    age_${UNIT}
}

process_file () {
    FILE=$1
    if [[ -f ${FILE} ]] || [[ -d ${FILE} ]]
        then
        FILE_DATE=$(date +%s -r ${FILE})
        CURR_DATE=$(date +%s)
        let AGE_SEC=${CURR_DATE}-${FILE_DATE}
    elif [ -z $FILE ]
        then print_usage
    else
        echo "ERROR: Cannot open file at '$FILE'"
        exit 1
    fi
}

process_string () {
    STRING=$1
    if STRING_DATE=$(date +%s -d "${STRING}")
        then
        CURR_DATE=$(date +%s)
        let AGE_SEC=${CURR_DATE}-${STRING_DATE}
    else
        echo "ERROR: Couldn't process date string '$STRING'"
        exit 1
    fi 
}

process_unit () {
    UNIT_VAR=UNIT_${UNIT_ARG}
    UNIT=${!UNIT_VAR:=auto}
}

print_usage () {
    echo "Usage: $(basename $0) [-u UNIT] [-q] [-f] filename"
    echo
    echo "   -f       Path to file / dir"
    echo "             or STDIN date string"
    echo "   -u UNIT  Unit to calculate:"
    echo "             s = seconds"
    echo "             m = minutes"
    echo "             h = hours"
    echo "             d = days"
    echo "             M = months"
    echo "             y = years"
    echo "   -q        Quiet, hide unit"
    exit 2
}

while getopts ":u:qf:" OPT; do
case ${OPT} in
    u)
        UNIT_ARG=${OPTARG}
        ;;
    q)
        QUIET_UNIT=true
        ;;
    f)
        FILE=${OPTARG}
        ;;
    *)
        print_usage
        ;;
    esac
done

if [[ -p /dev/stdin ]]
    then
    STRING=$(cat -)
    process_string "$STRING"
else
    process_file ${FILE:=$BASH_ARGV}
fi
process_unit

if [[ $AGE_SEC ]]
    then
    age_${UNIT}
    echo -n $AGE
    ${QUIET_UNIT} || echo " $UNIT"
else
    print_usage
fi