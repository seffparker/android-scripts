#!/data/bin/bash

## Post boot tasks
## Author: Seff P
## Version: 20200821

source check-root
remount-rw || exit 2

source set-dir
source $ETC/bashrc.root
source $ETC/hostname
source $ETC/dns

export BG=true

DATE_LOG="${LOG}/post-boot.history"

sed -i 1d $DATE_LOG
[ $1 ] && MODE="$1" || MODE="manual trigger"
echo "$(logdate) $MODE" >> $DATE_LOG

echo -n "$(logdate) SELinux mode (session): "
    setenforce 0
    getenforce
    
echo $(logdate) SHELL=$SHELL

# Fast entropy
echo -ne "$(logdate) Optimizing entropy  "
if [[ -e /dev/random_default ]]
    then
    echo [SKIP]
else
    mv /dev/random /dev/random_default
    ln /dev/urandom /dev/random
    mv /dev/hw_random /dev/hw_random_default
    ln /dev/urandom /dev/hw_random
    echo [DONE]
fi

# I/O scheduler
echo -ne "$(logdate) I/O scheduler tweak  "
for DEVICE in /sys/block/sd*/queue /sys/block/dm-0/queue
    do echo noop > $DEVICE/scheduler
    echo 64 > $DEVICE/read_ahead_kb
    done
echo [DONE]

echo -n "$(logdate) Symlinking bashrc  "
if [[ -L /.bashrc ]]
    then
    echo [SKIP]
else
    ln -fs $ETC/bashrc.root /.bashrc
    echo [DONE]
fi

echo -n "$(logdate) Symlinking bash_history  "
if [[ -L /.bash_history ]]
    then
    echo [SKIP]
else
    ln -fs $VAR/bash_history.root /.bash_history
    echo [DONE]
fi

echo -n "$(logdate) Symlinking bash_profile  "
if [[ -L /.bash_profile ]]
    then
    echo [SKIP]
else
    ln -fs $ETC/bashrc.root /.bash_profile
    echo [DONE]
fi

echo $(logdate) Locking vault
    vault 1

echo -n "$(logdate) Setting hostname $HOSTNAME  "
if [[ "$(hostname)" == "$HOSTNAME" ]]
    then echo "[SKIP]"
else
    /system/bin/hostname $HOSTNAME
    echo "[DONE]"
fi

echo -n "$(logdate) Disabling loggings  "
    stop logd
    settings put global dropbox_max_files 0
    echo "[DONE]"

echo $(logdate) Remounting as RO
    remount-ro

echo -n "$(logdate) DNS tweak via $CUSTOM_DNS  "
    if iptables -t nat -L | grep -q "${CUSTOM_DNS}:53"
        then echo "[SKIP]"
    else
        iptables -t nat -I OUTPUT -p udp --dport 53 -j DNAT --to-destination ${CUSTOM_DNS}:53
        echo "[DONE]"
    fi

echo -ne "$(logdate) (Re)starting crond "
    pkill -9 crond &> /dev/null
    /data/bin/crond -c $ETC/crontabs
    echo "(PID: $(pidof crond))  [DONE]"
    
# Start basic-charging-control
    echo -n "$(logdate) "
    basic-charging-control start

setenforce 1
if [[ "$1" ]]
    then
    termux-notification --content "Boot scripts are completed!" --id post-boot
    vibrate 1
fi