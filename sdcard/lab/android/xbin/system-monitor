#!/data/bin/bash

# Report basic system status
# Author: Seff Parker
# Version: 20210209 v1.1.0

source check-root
source set-prompt
source set-dir

APP_NAME="System Monitor"
PID_FILE="$RUN/system-monitor.pid"
BUCKET="$VAR/status-widget/bucket/monitor"
INTERVAL=30

daemon_run () {
    while true
        do
        CPU_BEGIN=$(awk '/cpu / ' /proc/stat)
        BC_BEGIN=$(echo $CPU_BEGIN | wc -c)
        CPU_TEMP=$(awk '{print $1/1000 "°C"}' /sys/devices/virtual/thermal/thermal_zone1/temp)
        BAT_LEVEL=$(awk '{print "Bat. " $0 "%,"}' /sys/class/power_supply/battery/capacity)
        BAT_TEMP=$(awk '{print $1/10 "°C"}' /sys/class/power_supply/battery/temp)
        RAM=$(awk '/MemAvailable:/ {printf "RAM: " "%0.0f MB free",$2/1000}' /proc/meminfo)
        sleep 1
        CPU_END=$(awk '/cpu / ' /proc/stat)
        BC_END=$(echo $CPU_END | wc -c)
        if [[ $BC_BEGIN -le $BC_END ]]
            then
            LOAD=$(echo "$CPU_BEGIN $CPU_END" | awk '{printf "CPU: " "%0.1f%%,",($13+$14+$15-$2-$3-$4)*100/($13+$14+$15+$16-$2-$3-$4-$5)}')
        fi
        echo "$LOAD $CPU_TEMP • $RAM • $BAT_LEVEL $BAT_TEMP" | tee $BUCKET
        sleep $INTERVAL
    done
}

daemon_start () {
    echo -n "Starting ${APP_NAME} "
    if daemon -t -p $PID_FILE -c $0
        then
        PID=$(cat $PID_FILE)
        echo "(PID: $PID) $(OK)"
    elif daemon -s -p $PID_FILE -c $0 -a run
        then
        PID=$(cat $PID_FILE)
        echo "(PID: $PID) $(DONE)"
    else
        FAIL
        CODE=1
    fi
}

daemon_status () {
    echo -n "${APP_NAME} is "
    if daemon -t -p $PID_FILE -c $0
        then
        PID=$(cat $PID_FILE)
        echo "running (PID: $PID) $(OK)"
    else
        echo "not running $(FAIL)"
        CODE=1
    fi
}

daemon_stop () {
    PID=$(cat $PID_FILE 2> /dev/null)
    echo -n "Stopping ${APP_NAME} "
    if daemon -k -p $PID_FILE -c $0
        then
        rm -f $PID_FILE
        echo "(PID: $PID) $(DONE)"
    else
        OK
    fi
}

# main ()

case $1 in
    start)
        daemon_start
        ;;
    run)
        [[ $2 ]] && INTERVAL=$2
        daemon_run
        ;;
    status)
        daemon_status
        ;;
    restart)
        daemon_stop
        daemon_start
        ;;
    stop)
        daemon_stop
        ;;
    *)
        echo "Usage: start | status | restart | stop"
        CODE=2
        ;;
esac

exit $CODE